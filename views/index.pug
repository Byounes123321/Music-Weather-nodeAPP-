doctype html 
html(lang="en")
  head
    script(src="https://pugjs.org/js/pug.js")
    link(rel="icon", type="image/png", href="views/imgs/music-cloud.png")
    link(rel="stylesheet", href="views/style.css")
    title= title
  body
    header 
        h1.site-name Welcome to my Music & Weather App
    main
        div#siteContainer
            div#weatherContainer
                div#weather
            div#loader
            div#musicContainer
                h2#music
    footer 
        p &copy Copyright Bassil Younes, 2023
    script.
      let response;
      let showWeather = document.getElementById("weather");
      let showMusic = document.getElementById("music");
      let loader = document.getElementById("loader");
      let musicDiv = document.getElementById("musicContainer");
      let weatherDiv = document.getElementById("weatherContainer");
      window.onload = async function() {
        //-   alert("loaded");
          if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(showPosition);
          } else {
            alert("Geolocation is not supported by this browser.");
          }
      }

      function showPosition(position) {
          var latitude = position.coords.latitude;
          var longitude = position.coords.longitude;
          //- alert("showPos");
          // Make an AJAX request to the server with the latitude and longitude
          var xhr = new XMLHttpRequest();
          xhr.open("POST", "/api/getcity");
          xhr.setRequestHeader("Content-Type", "application/json");
          xhr.addEventListener("load", function() {
            if (xhr.status === 200) {
                loader.style.display = "none";
                musicDiv.style.display = "block";
                weatherDiv.style.display = "block";
                let units = "°C";
                response = JSON.parse(xhr.responseText); 
                //- console.log(response.weatherRes); 
                const w = response.weatherRes
                let temp = w.main.temp;
                let maxTemp = w.main.temp_max;
                let minTemp = w.main.temp_min;
                let fLike = w.main.feels_like;
                let wind = Math.round(w.wind.speed * 3.6) + ' km/h';
                function CtoF(temp){
                    return F = temp * 9/5 +32;
                }
                if(w.sys.country == "US" || w.sys.country == "LR" || w.sys.country == "MM" ){
                    units = "°F"
                    temp = CtoF(temp);
                    minTemp = CtoF(minTemp);
                    maxTemp = CtoF(maxTemp);
                    fLike = CtoF(fLike);
                    wind = w.wind.speed + ' mph'
                };
                let sunRise = new Date(w.sys.sunrise * 1000);
                let sunRiseH = sunRise.getHours();
                let sunRiseM = sunRise.getMinutes();
                console.log(sunRiseM);
                let sunSet = new Date(w.sys.sunset * 1000);
                let sunSetH = (sunSet.getHours()-12);
                let sunSetM = sunSet.getMinutes();
                //- //Sorry for this atrocity... I couldn't get my page to render using pug variables
                showWeather.innerHTML =
                '<h2>' + w.name +' Weather</h2>' +
                '<div id="temp-icon">'+
                '<img alt="current weather icon" src="https://openweathermap.org/img/wn/'+ w.weather[0].icon +'@2x.png">'+
                '<span><strong>'+Math.round(temp)+ units+ '</strong></span>'+
                '</div>'+
                '<div id=h-l>'+
                '<p><span style="color:#F97C00">H:' +Math.round(minTemp )+ '° </span></p>'+
                '<p>  <span style="color:#4BDCE3">L:' + Math.round(maxTemp)+'° </span></p>'+
                '</div>'+
                '<p>Feels like '+Math.round(fLike)+'° with '+w.weather[0].description+'</p>' +
                '<div id="sunrise-set">' +
                '<p>Sunrise</p>' +
                '<p>Sunset</p>' +
                '<p>' + sunRiseH + ':' + ((sunRiseM < 10) ? '0' + sunRiseM : sunRiseM) + 'a.m.</p>' +
                '<p>' + sunSetH + ':' + ((sunSetM < 10) ? '0' + sunSetM : sunSetM) + 'p.m.</p>' +
                '</div>' + 
                '<div id="wind-hum">'+
                '<p>Wind</p><p>Humidity</p>'+
                '<p>'+wind+'</p><p>' +w.main.humidity+'% </p>'+
                '</div>'+ 
                '<div id="timeContainer"><span id="time"></span></div>';

                function updateTime() {
                var currentTime = new Date();
                var hours = currentTime.getHours();
                var minutes = currentTime.getMinutes();
                var seconds = currentTime.getSeconds();
                var ampm = hours >= 12 ? 'pm' : 'am'; 
                hours = hours % 12; 
                hours = hours ? hours : 12; 
                minutes = minutes < 10 ? '0' + minutes : minutes; 
                seconds = seconds < 10 ? '0' + seconds : seconds; 

                var timeString = hours + ':' + minutes + ':' + seconds +' '+ ampm;
                document.getElementById('time').innerHTML = timeString;
                }
                updateTime(); 
                setInterval(updateTime, 1000);


                const playlists = response.getPlaylist.playlists; 
                //- console.log(playlists); 

                let html =
                 '<div>'+
                 '<h2>Let the Weather Set the Beat:<br> Personalized <span style="color: #1FDF64">Spotify</span> Playlists</h2>'+
                 '<ul>';
                for (let i = 0; i < playlists.items.length; i++) {
                html +=  
                '<li><a href="' + playlists.items[i].external_urls.spotify + '" target="_blank">'+
                '<div id="playlistContainer">' + 
                '<img alt="playlist icon" src="'+playlists.items[i].images[0].url+'" height ="60px" width="60px">'+
                '<div id="name-by">'+
                '<p>'+ playlists.items[i].name + '</p>'+
                '<p>By '+playlists.items[i].owner.display_name +'</p>'+
                '</div>'+
                '</div>'+
                '</a></li>';
                }
                html += '</ul></div>';
                showMusic.innerHTML = html;
                //- showMusic.innerHTML = pug.renderFile('index.pug', { playlists: playlists })
            } else {
                //- console.error('Request failed. Returned status of ' + xhr.status);
            }
          });
          xhr.send(JSON.stringify({ latitude: latitude, longitude: longitude }));
      }
